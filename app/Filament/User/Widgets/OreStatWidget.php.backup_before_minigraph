<?php

namespace App\Filament\User\Widgets;

use App\Models\Report;
use Carbon\Carbon;
use Filament\Widgets\StatsOverviewWidget as BaseWidget;
use Filament\Widgets\StatsOverviewWidget\Stat;

class OreStatWidget extends BaseWidget
{
    protected function getStats(): array
    {
        $user = auth()->user();
        $meseCorrente = Carbon::now();
        
        // Ore lavorate questo mese
        $oreLavorateQuery = Report::where('user_id', $user->id)
            ->whereMonth('data', $meseCorrente->month)
            ->whereYear('data', $meseCorrente->year);
            
        $oreLavorate = $oreLavorateQuery->sum('ore_lavorate');
        $oreViaggio = $oreLavorateQuery->sum('ore_viaggio');
        $oreTotali = $oreLavorate + $oreViaggio;
        
        // Giorni lavorativi nel mese (esclusi weekend)
        $giorniLavorativi = $meseCorrente->copy()->startOfMonth()
            ->diffInWeekdays($meseCorrente->copy()->endOfMonth()) + 1;
            
        // Ore dovute (8 ore/giorno per giorni lavorativi)
        $oreDovute = $giorniLavorativi * 8;
        
        // Percentuale completamento
        $percentuale = $oreDovute > 0 ? round(($oreTotali / $oreDovute) * 100, 1) : 0;
        
        // Colore basato su percentuale
        $coloreOre = $percentuale >= 100 ? 'success' : ($percentuale >= 80 ? 'warning' : 'danger');
        
        return [
            Stat::make('Ore Lavorate', number_format($oreLavorate, 1) . 'h')
                ->description('Ore pure di lavoro')
                ->descriptionIcon('heroicon-m-briefcase')
                ->color('primary'),
                
            Stat::make('Ore Totali', number_format($oreTotali, 1) . 'h')
                ->description("di {$oreDovute}h dovute ({$percentuale}%)")
                ->descriptionIcon($percentuale >= 100 ? 'heroicon-m-check-circle' : 'heroicon-m-clock')
                ->color($coloreOre),
                
            Stat::make('Ore Viaggio', number_format($oreViaggio, 1) . 'h')
                ->description('Tempo di spostamento')
                ->descriptionIcon('heroicon-m-truck')
                ->color('info'),
        ];
    }
}
