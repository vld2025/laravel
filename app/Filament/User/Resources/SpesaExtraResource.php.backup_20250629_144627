<?php
namespace App\Filament\User\Resources;

use App\Filament\User\Resources\SpesaExtraResource\Pages;
use App\Models\SpesaExtra;
use App\Models\Committente;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;

class SpesaExtraResource extends Resource
{
    protected static ?string $model = SpesaExtra::class;
    protected static ?string $navigationIcon = 'heroicon-o-document-currency-dollar';
    protected static ?string $navigationLabel = 'Spese Extra';
    protected static ?string $modelLabel = 'Spesa Extra';
    protected static ?string $pluralModelLabel = 'Spese Extra';
    protected static ?int $navigationSort = 3;

    public static function form(Form $form): Form
    {
        return $form->schema([
            Forms\Components\Hidden::make('user_id')
                ->default(fn () => auth()->id()),
                
            Forms\Components\Select::make('committente_id')
                ->label('Committente')
                ->required()
                ->options(Committente::pluck('nome', 'id'))
                ->searchable(),
                
            Forms\Components\DatePicker::make('data')
                ->required()
                ->default(now())
                ->label('Data Spesa'),
                
            Forms\Components\TextInput::make('importo')
                ->numeric()
                ->prefix('CHF')
                ->label('Importo'),
                
            Forms\Components\Textarea::make('descrizione')
                ->rows(3)
                ->label('Descrizione')
                ->columnSpanFull(),
                
            Forms\Components\FileUpload::make('file')
                ->required()
                ->acceptedFileTypes(['image/*', 'application/pdf'])
                ->disk('public')
                ->directory('spese-extra')
                ->downloadable()
                ->openable()
                ->maxSize(50 * 1024)
                ->label('File Ricevuta')
                ->columnSpanFull(),
        ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->modifyQueryUsing(function (Builder $query) {
                // User vede solo le proprie spese extra
                $query->where('user_id', auth()->id());
            })
            ->columns([
                Tables\Columns\TextColumn::make('data')
                    ->label('Data')
                    ->date('d/m/Y')
                    ->sortable(),
                    
                Tables\Columns\TextColumn::make('committente.nome')
                    ->label('Cliente')
                    ->searchable()
                    ->limit(20),
                    
                Tables\Columns\TextColumn::make('importo')
                    ->label('Importo')
                    ->prefix('CHF ')
                    ->numeric(2)
                    ->placeholder('--'),
                    
                Tables\Columns\TextColumn::make('descrizione')
                    ->label('Descrizione')
                    ->limit(30)
                    ->placeholder('--'),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('committente_id')
                    ->relationship('committente', 'nome')
                    ->label('Cliente'),
            ])
            ->actions([
                Tables\Actions\Action::make('view')
                    ->label('')
                    ->icon('heroicon-o-eye')
                    ->tooltip('Visualizza')
                    ->color('primary')
                    ->url(fn (SpesaExtra $record): string => static::getUrl('edit', ['record' => $record]))
                    ->size('sm'),
                Tables\Actions\Action::make('download')
                    ->label('')
                    ->icon('heroicon-o-arrow-down-tray')
                    ->tooltip('Scarica')
                    ->url(fn (SpesaExtra $record): string => asset('storage/' . $record->file))
                    ->openUrlInNewTab()
                    ->size('sm'),
            ])
            ->bulkActions([])
            ->defaultSort('data', 'desc')
            ->paginated([10, 25]);
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListSpesaExtras::route('/'),
            'create' => Pages\CreateSpesaExtra::route('/create'),
            'edit' => Pages\EditSpesaExtra::route('/{record}/edit'),
        ];
    }

    public static function canEdit($record): bool
    {
        return $record->user_id === auth()->id();
    }

    public static function canDelete($record): bool
    {
        return $record->user_id === auth()->id();
    }
}
